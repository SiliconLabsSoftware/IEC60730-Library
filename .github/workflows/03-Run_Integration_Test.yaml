name: 03-Trigger Workflow Run Integration Test

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      Branch:
        description: 'branch to checkout'
        required: true
        default: 'main'
jobs:
  trigger-workflow:
    runs-on: ubuntu-latest

    steps:

      - name: Set up environment variables
        run: |
          echo "REPO_B_OWNER=SiliconLabsInternal" >> $GITHUB_ENV
          echo "REPO_B_NAME=DevS-SQA" >> $GITHUB_ENV
          echo "DEFAULT_BRANCH=3-IEC60730-Library" >> $GITHUB_ENV
          echo "Repo_test=${{ github.repository }}" >> $GITHUB_ENV
          
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Contribute_branch=${{ github.event.inputs.Branch }}" >> $GITHUB_ENV 
          else
            echo "Contribute_branch=${{ github.head_ref }}" >> $GITHUB_ENV  # PR branch
          fi
          
          echo "Validate_branch=main" >> $GITHUB_ENV
          echo "ADAPTER_SN_MG12=440189400" >> $GITHUB_ENV
          echo "HOST_TP_MG12=192.168.1.118" >> $GITHUB_ENV
          echo "ADAPTER_SN_MG24=440111030" >> $GITHUB_ENV
          echo "HOST_TP_MG24=192.168.1.69" >> $GITHUB_ENV
          echo "RUNNER_BUILD=ubuntu-latest" >> $GITHUB_ENV
          echo "RUNNER_EXECUTE=DS_SQA_HN_01" >> $GITHUB_ENV

      - name: Trigger Workflow
        run: |
          response=$(curl -v -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.SILABS_THIEUVU_PAT }}" \
            -d '{
                  "ref": "refs/heads/${{ env.DEFAULT_BRANCH }}",
                  "inputs": {
                    "Repo_test": "${{ env.Repo_test }}",
                    "Contribute_branch": "${{ env.Contribute_branch }}",
                    "Validate_branch": "${{ env.Validate_branch }}",
                    "ADAPTER_SN_MG12": "${{ env.ADAPTER_SN_MG12 }}",
                    "HOST_TP_MG12": "${{ env.HOST_TP_MG12 }}",
                    "ADAPTER_SN_MG24": "${{ env.ADAPTER_SN_MG24 }}",
                    "HOST_TP_MG24": "${{ env.HOST_TP_MG24 }}",
                    "RUNNER_BUILD": "${{ env.RUNNER_BUILD }}",
                    "RUNNER_EXECUTE": "${{ env.RUNNER_EXECUTE }}"
                  }
                }' \
            https://api.github.com/repos/${{ env.REPO_B_OWNER }}/${{ env.REPO_B_NAME }}/actions/workflows/03-Run_Integration_Test.yaml/dispatches)

          echo "Triggered workflow: $response"
          if echo "$response" | grep -q '"message": "Not Found"'; then
            echo "Error: Workflow or repository not found. Please check the repository name, workflow file name, and branch name."
            exit 1
          fi


      - name: Wait for Check-Time Workflow to Complete
        id: wait
        env:
          TIMEOUT: 1800
        run: |
          sleep 30
          run_id=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.SILABS_THIEUVU_PAT }}" \
            https://api.github.com/repos/SiliconLabsInternal/DevS-SQA/actions/runs \
            | jq '.workflow_runs[] | select(.name=="03-Run Integration Test") | .id' | head -n 1)
          echo "Run ID: $run_id"
          start_time=$(date +%s)
          while true; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            if [ $elapsed_time -ge $TIMEOUT ]; then
              echo "Error: Workflow did not complete within $((TIMEOUT / 60)) minutes."
              exit 1
            fi
            status=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.SILABS_THIEUVU_PAT }}" \
              https://api.github.com/repos/SiliconLabsInternal/DevS-SQA/actions/runs/$run_id \
              | jq -r '.status')
            conclusion=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.SILABS_THIEUVU_PAT }}" \
              https://api.github.com/repos/SiliconLabsInternal/DevS-SQA/actions/runs/$run_id \
              | jq -r '.conclusion')
            echo "Status: $status, Conclusion: $conclusion"
            if [[ "$status" == "completed" ]]; then
              if [[ "$conclusion" == "success" ]]; then
                echo "Workflow completed successfully."
                exit 0
              else
                echo "Workflow failed."
                exit 1
              fi
            fi
            sleep 30
          done
